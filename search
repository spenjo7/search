#!/bin/bash
DIR=`pwd -P`/
STORE_FILE=~/.search_tmp
FOUND=~/.found

## Variables ##
EXTN='txt'
SEARCH_TERM=''

##	Functions ##
help(){
	echo "  [ -h ] Get help"
	echo "  [ -a ] Search for any file type instead of the default .txt* extention"
	echo "  [ -e ][ext] Change file extention to be searched for"
	echo "  [ <text> ] Search the files for that text string; does not support spaces"
}

getLength(){
    LEN=$(wc -l $0 | sed 's/[^0-9]//g' )
    echo $LEN
}

find_files_and_sort(){
	if [ -z "$SEARCH_TERM" ]		# Search for files without greping #
	then
		find ./ -type f -name "*\.${EXTN}*" | sort > $STORE_FILE
	else 
		find ./ -type f -name "*\.${EXTN}*" -print0 | xargs -0 grep -il "$SEARCH_TERM" | sort > $STORE_FILE
	fi
}

filter_and_transfer(){	# Use SED to clean output; then delete temp file 
	sed "s/^\.\/*/${DIR//\//\\/}/g" $STORE_FILE > $FOUND
	rm -f $STORE_FILE
}

init(){
	find_files_and_sort
	filter_and_transfer
}

## GET FLAGS ##
while getopts 'ahe:' OPTION; do
  case "$OPTION" in
    h)
      help
		exit 1
      ;;
		a)
      EXTN=""
			;;
    e)
      EXTN="$OPTARG"
      ;;
    ?)
	 	## error auto thrown, just exit
		exit 1
      ;;
  esac
done
shift "$(($OPTIND -1))"

## SAFETY CHECK ## 
if [ $DIR == ~/ ]		 # Not sure how to do this dynamically
then
	## echo "ABORTING: Do not run this from your ~ directory, it will throw a bunch of permissions errors and break"
	## exit 1
	echo "Warning: Do not run this from your ~ directory, it will throw a bunch of permissions errors and break."
	echo  "Press any key to Cancel"
	read prompt
	exit 1
fi

##  Handle Command Line Parameters ## 

if [ -z "$1" ]			# No parameters; search for files without greping #
then 

	init
	
else						# xargs grep the results before pushing to store file
		## Might actually support spaces now? ##
	SEARCH_TERM="$1"
	init 
fi


cat $FOUND
exit 1